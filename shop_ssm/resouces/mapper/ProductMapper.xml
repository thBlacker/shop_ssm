<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hc.shop.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="cn.hc.shop.entities.Product" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="market_price" property="marketPrice" jdbcType="DOUBLE" />
    <result column="shop_price" property="shopPrice" jdbcType="DOUBLE" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="pdesc" property="pdesc" jdbcType="VARCHAR" />
    <result column="is_hot" property="isHot" jdbcType="INTEGER" />
    <result column="pstock" property="pstock" jdbcType="INTEGER" />
    <result column="pdate" property="pdate" jdbcType="TIMESTAMP" />
    <result column="csid" property="csid" jdbcType="INTEGER" />
  </resultMap>
  <!-- List<Product> getHot(); -->
  <select id="getHot" resultMap="BaseResultMap">
  	select * from product p order by p.is_hot desc   limit 0,10
  </select>
  
  <!--List<Product> getNew(); -->
  <select id="getNew" resultMap="BaseResultMap">
  	select * from product p order by p.pdate desc limit 0,10
  </select>
  
<!--   List<Product> getProductsByCid(@Param("cid") Integer cid, @Param("begin") Integer begin, @Param("limit") Integer limit); -->
  <select id="getProductsByCid" resultMap="BaseResultMap">
  	select * from categorysecond cs, product p where cs.csid = p.csid and cs.cid = #{cid} limit #{begin}, #{limit} 
  </select>
  
<!-- int getCount(Integer cid); -->
<select id="getCount" resultType="int">
	select count(*) from categorysecond cs, product p where cs.csid = p.csid and cs.cid = #{cid}
</select>
  
<!-- List<Product> getProductByCsid(Integer csid, int begin,int limit); -->  
<select id="getProductByCsid" resultMap="BaseResultMap">
	select * from product where csid = #{csid} limit #{begin},#{limit}
</select>

<!-- int getCountByCsid(Integer csid); -->
<select id="getCountByCsid" resultType="int">
	select count(*) from categorysecond cs, product p where cs.csid = p.csid and cs.csid = #{csid}
</select>


<!-- List<Product> findProductBySearch(Integer csid,Integer cid, int lprice, int hprice, String pname, int begin, int limit); -->
 <select id="findProductBySearch" resultMap="BaseResultMap">
	select * from product  
	<trim prefix="where" suffixOverrides="and">
		<if test="prname.trim() != '' ">
			pname LIKE CONCAT('%',#{prname},'%' ) and
		</if>
		<if test="lprice != null">
			shop_price &gt; #{lprice} and
		</if>
		<if test="hprice != null">
			shop_price &lt; #{hprice}
		</if>
	</trim>
		order by shop_price limit #{begin}, #{limit}
</select> 

<!-- int getCounts( int lprice, int hprice, String pname -->
 <select id="getCounts" resultType="int">
	select count(*) from product 
	<trim prefix="where" suffixOverrides="and">
		<if test="prname.trim() != '' ">
			pname LIKE CONCAT('%',#{prname},'%' ) and
		</if>
		<if test="lprice != null">
			shop_price &gt; #{lprice} and
		</if>
		<if test="hprice != null">
			shop_price &lt; #{hprice}
		</if>
	</trim>
</select>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pid, pname, market_price, shop_price, image, pdesc, is_hot, pstock, pdate, csid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.hc.shop.entities.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hc.shop.entities.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hc.shop.entities.Product" >
    insert into product (pid, pname, market_price, 
      shop_price, image, pdesc, 
      is_hot, pstock, pdate, 
      csid)
    values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{marketPrice,jdbcType=DOUBLE}, 
      #{shopPrice,jdbcType=DOUBLE}, #{image,jdbcType=VARCHAR}, #{pdesc,jdbcType=VARCHAR}, 
      #{isHot,jdbcType=INTEGER}, #{pstock,jdbcType=INTEGER}, #{pdate,jdbcType=TIMESTAMP}, 
      #{csid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.hc.shop.entities.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="pname != null" >
        pname,
      </if>
      <if test="marketPrice != null" >
        market_price,
      </if>
      <if test="shopPrice != null" >
        shop_price,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="pdesc != null" >
        pdesc,
      </if>
      <if test="isHot != null" >
        is_hot,
      </if>
      <if test="pstock != null" >
        pstock,
      </if>
      <if test="pdate != null" >
        pdate,
      </if>
      <if test="csid != null" >
        csid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null" >
        #{marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="shopPrice != null" >
        #{shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="pdesc != null" >
        #{pdesc,jdbcType=VARCHAR},
      </if>
      <if test="isHot != null" >
        #{isHot,jdbcType=INTEGER},
      </if>
      <if test="pstock != null" >
        #{pstock,jdbcType=INTEGER},
      </if>
      <if test="pdate != null" >
        #{pdate,jdbcType=TIMESTAMP},
      </if>
      <if test="csid != null" >
        #{csid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hc.shop.entities.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null" >
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.marketPrice != null" >
        market_price = #{record.marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.shopPrice != null" >
        shop_price = #{record.shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.pdesc != null" >
        pdesc = #{record.pdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.isHot != null" >
        is_hot = #{record.isHot,jdbcType=INTEGER},
      </if>
      <if test="record.pstock != null" >
        pstock = #{record.pstock,jdbcType=INTEGER},
      </if>
      <if test="record.pdate != null" >
        pdate = #{record.pdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.csid != null" >
        csid = #{record.csid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=DOUBLE},
      shop_price = #{record.shopPrice,jdbcType=DOUBLE},
      image = #{record.image,jdbcType=VARCHAR},
      pdesc = #{record.pdesc,jdbcType=VARCHAR},
      is_hot = #{record.isHot,jdbcType=INTEGER},
      pstock = #{record.pstock,jdbcType=INTEGER},
      pdate = #{record.pdate,jdbcType=TIMESTAMP},
      csid = #{record.csid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hc.shop.entities.Product" >
    update product
    <set >
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null" >
        market_price = #{marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="shopPrice != null" >
        shop_price = #{shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="pdesc != null" >
        pdesc = #{pdesc,jdbcType=VARCHAR},
      </if>
      <if test="isHot != null" >
        is_hot = #{isHot,jdbcType=INTEGER},
      </if>
      <if test="pstock != null" >
        pstock = #{pstock,jdbcType=INTEGER},
      </if>
      <if test="pdate != null" >
        pdate = #{pdate,jdbcType=TIMESTAMP},
      </if>
      <if test="csid != null" >
        csid = #{csid,jdbcType=INTEGER},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hc.shop.entities.Product" >
    update product
    set pname = #{pname,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=DOUBLE},
      shop_price = #{shopPrice,jdbcType=DOUBLE},
      image = #{image,jdbcType=VARCHAR},
      pdesc = #{pdesc,jdbcType=VARCHAR},
      is_hot = #{isHot,jdbcType=INTEGER},
      pstock = #{pstock,jdbcType=INTEGER},
      pdate = #{pdate,jdbcType=TIMESTAMP},
      csid = #{csid,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>